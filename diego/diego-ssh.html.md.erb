---
title: Understanding Diego SSH 
---

<strong><%= modified_date %></strong>

This page assumes you are using cf CLI v6.13.0 or later.

This document describes details about the Diego SSH components for access to deployed application instances. Cloud Foundry supports SSH access to applications running on both the Diego and legacy DEA runtime architectures. Additionally, the platform supports load balancing of SSH sessions with your deployment load balancer.

The Diego SSH Overview document describes [procedural and configuration information on Diego SSH](../../devguide/deploy-apps/diego-ssh-overview.html).

## <a id="diego-ssh-components"></a>Diego SSH Components

Diego-SSH includes the following central components, which are described in more detail below:

- An implementation of an ssh [proxy server](#diego-ssh-proxy).
- A lightweight ssh [daemon](#daemon).

When these components are deployed and configured correctly, they provide a simple and scalable way to access Diego containers apps and other long running processes (LRPs).

## <a id='daemon'></a> Diego-SSH Daemon ##

The SSH daemon is a lightweight implementation that is built around the Go SSH library. It supports command execution, interactive shells, local port forwarding, and secure copy. The daemon is self-contained and has no dependencies on the container root file system.

The daemon is focused on delivering basic access to application instances in Cloud Foundry. It is intended to run as an unprivileged process and interactive shells and commands will run as the daemon user. The daemon only supports one authorized key is not intended to support multiple users.

The daemon can be made available on a file server and Diego LRPs that want to use it can include a download action to acquire the binary and a run action to start it. Cloud Foundry applications will download the daemon as part of the lifecycle bundle.

## <a id="diego-ssh-proxy"></a>Diego SSH Proxy Authentication

The SSH proxy hosts the user-accessible SSH endpoint and is responsible for authentication, policy enforcement, and access controls in the context of Cloud Foundry. After a user has successfully authenticated with the proxy, the proxy will attempt to locate the target container and create an SSH session to a daemon running inside the container. After both sessions have been established, the proxy will manage the communication between the user's SSH client and the container's SSH Daemon.
