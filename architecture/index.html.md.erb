---
title: Cloud Foundry Components
---

<strong><%= modified_date %></strong>

Cloud Foundry components include a self-service application execution engine, an
automation engine for application deployment and lifecycle management, and a
scriptable command line interface (CLI), as well as integration with development
tools to ease deployment processes.
Cloud Foundry has an open architecture that includes a buildpack mechanism for
adding frameworks, an application services interface, and a cloud provider
interface.

Refer to the descriptions below for more information about Cloud Foundry
components.
Some descriptions include links to more detailed documentation.

![Cloud Foundry Architecture](../images/cf_architecture_block.png)


## <a id='routing'></a>Routing

### <a id='router'></a>Router

The [router](./router.html) routes incoming traffic to the appropriate
component, usually the Cloud Controller or a running application on a DEA node.

## <a id='authentication'></a>Authentication

### <a id='uaa'></a> OAuth2 Server (UAA) and Login Server

The OAuth2 server (the [UAA](./uaa.html)) and Login Server work together to
provide identity management.

## <a id='app-lifecycle'></a>App Lifecycle

### <a id='cc'></a> Cloud Controller

The [Cloud Controller](./cloud-controller.html) is responsible for managing the
lifecycle of applications.
When a developer pushes an application to Cloud Foundry, she is targeting the
Cloud Controller.
The Cloud Controller then stores the raw application bits, creates a record to
track the application metadata, and directs a DEA node to stage and run the
application.
The Cloud Controller also maintains records of orgs, spaces, services,
service instances, user roles, and more.

### <a id='nsync-converger'></a> nsync, Converger, and Cell Reps

In pre-Diego CF architecture, this function was performed by the [Health Manager (HM9000)](../diego/dea-vs-diego.html#hm9k).

![Cloud Foundry Architecture](../images/diego/app-monitor-sync-diego.png)

## <a id='app-storage-execution'></a>App Storage and Execution

### <a id='blob'></a> Blob Store

The blob store holds:

* Application code
* Buildpacks
* Droplets

### <a id='diego-cell'></a> Diego Cell

In pre-Diego CF architecture, this function was performed by the [DEA](../diego/dea-vs-diego.html#dea).

## <a id='services'></a>Services

### <a id='broker'></a> Service Brokers

Applications typically depend on <%= vars.services %> such as databases
or third-party SaaS providers.
When a developer provisions and binds a service to an application, the service
broker for that service is responsible for providing the service instance.

## <a id='messaging'></a>Messaging

### <a id='bbs-consul'></a> BBS and Consul

In pre-Diego CF architecture, this function was performed exclusively by the [NATS Message Bus](../diego/dea-vs-diego.html#nats).

## <a id='metrics-logging'></a>Metrics and Logging

### <a id='metrics'></a> Metrics Collector and App Log Aggregator: Logging and Statistics

The metrics collector gather metrics from the components.
Operators can use this information to monitor an instance of Cloud Foundry.

The application log aggregator streams application logs to developers.
