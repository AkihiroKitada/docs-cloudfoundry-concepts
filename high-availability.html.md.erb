---
title: High Availability in Cloud Foundry
owner: Release Integration
---


<%# Reset page title based on product title %>
<% current_page.data.title = "High Availability in " + vars.product_short if vars.product_name != 'CF'  %>



This topic describes the components used to ensure high availability in <%= vars.app_runtime_full %>, vertical and horizontal scaling, and the infrastructure required to support scaling component VMs for high availability.


## <a id='azs'></a> Availability Zones for High Availability

Availability Zones (AZs) are locations where public cloud services offer data centers. 

You can assign and scale components in multiple AZs to help maintain high availability through redundancy. To configure sufficient redundancy, deploy <%= vars.product_short %> across three or more AZs and assign multiple component instances to different AZs.

A deployment with three or more availability zones operates uninterrupted when entire AZs become unavailable. For example, a three-AZ deployment stays available when one entire AZ goes down, and a five-AZ deployment stays available during an outage of up to two AZs.


## <a id='external-lbs'></a> External Load Balancers for High Availability

To ensure high availability for a production environments, use a highly-available customer-provided load balancing solution that does the following:

* Provides load balancing to each of the <%= vars.product_short %> Router IP addresses
* Supports SSL termination with wildcard DNS location
* Adds appropriate x-forwarded-for and x-forwarded-proto HTTP headers to incoming requests
* (Optional) Supports WebSockets

For lab and test environments, the `use-haproxy.yml` ops file enables HAProxy for your foundation.

<%= vars.external_lb %>

## <a id='blobstore'></a> Blob Storage for High Availability

Blobs are large binary files. To store blobs for high availability, use external storage such as Amazon S3 or an S3-compatible service. 

If you store blobs internally using WebDAV or NFS, these components run as single instances and you cannot scale them. For these deployments, use the high availability features of your IaaS to immediately recover your WebDAV or NFS server VM if it fails. <%= vars.contact_support %>

<%= vars.collector_singleton %>


## <a id='vert-and-horiz'></a> Vertical and Horizontal Scaling for High Availability

You can scale platform capacity vertically by adding memory and disk, or horizontally by adding more VMs running instances of <%= vars.product_short %> components. The nature of the applications you host on <%= vars.product_short %> should determine whether you should scale vertically or horizontally.

<%= image_tag("scale_cf.png", :height => "450px", :width => "475px") %>

For more information about scaling applications and maintaining app uptime, see [Scaling an Application Using cf scale](../devguide/deploy-apps/cf-scale.html) and [Using Blue-Green Deployment to Reduce Downtime and Risk](../devguide/deploy-apps/blue-green.html).

### <a id='vert-scaling'></a> Scale Vertically

Scaling vertically means adding memory and disk to your component VMs.

To scale vertically, ensure that you allocate and maintain enough of the following:

* Free space on host Diego cell VMs so that apps expected to deploy can successfully be staged and run.
* Disk space and memory in your deployment such that if one host VM is down, all instances of apps can be placed on the remaining Host VMs.
* Free space to handle one AZ going down if deploying in multiple AZs.

### <a id='horiz-scaling'></a> Scale Horizontally

Scaling horizontally means increasing the number of VM instances dedicated to running a functional component of the system.

You can horizontally scale most <%= vars.product_short %> components to multiple instances to achieve the redundancy required for high availability. 

You should also distribute the instances of components with multiple instances across different AZs to minimize downtime during ongoing operation, product updates, and platform upgrades. If you use more than three AZs, ensure that you use an odd number of AZs.

<%= vars.scaling_ert %>

<%= partial vars.scale_table %>


## <a id='supporting-scaling'></a> Support Component Scaling

The ability to vertically scale component VMs is important for high availability. 

To scale component VMs, you must ensure that the surrounding infrastructure of your deployment supports VM scaling.

This section describes the infrastructure required to support scaling component VMs for high availability.

<% if vars.platform_code == 'CF' %>
<%= vars.max_in_flight_header %>
<%= partial 'max_in_flight_text' %>
<% end %>
<%= vars.om_resurrector_header%>
<%= vars.om_resurrector_text%>

### <a id='resource-pools'></a> Resource Pools

Each IaaS has different ways of limiting resource consumption for scaling VMs. Consult with your IaaS administrator to ensure additional VMs and related resources, like IPs and storage, are available to scale.

To configure your resource pools according to the requirements of your deployment, see <%=vars.pools_link%>

<%=vars.pcf_pools%>

### <a id='databases'></a> Databases

For database services deployed outside <%= vars.product_short %>, use the high availability features included with your infrastructure. Also, configure backup and restore where possible. <%= vars.scaling_ert_db %>

<p class="note"><strong>Note:</strong> Data services may have single points of failure depending on their configuration.</p>

<%= vars.contact_support %>
