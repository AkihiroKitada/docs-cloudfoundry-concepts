---
title: Users, Orgs, Spaces, Roles, and Permissions
owners: CAPI, Identity
---

<strong><%= modified_date %></strong>

This topic describes the types of users in a <%= vars.product_name %>  deployment, their roles and permissions, and who creates and manages their accounts. 

A <%= vars.product_name %> deployment incorporates the following user types:

Operator - highest level
	ops man admin
		sets userstore
		adds products and services, configuration as tiles
	ERT op admin
		true statement about where user account comes from if previously set by ops man admin?
		perhaps that's what the note says
Elastic Runtime users - broad term for all the roles under ER users

- [Operator](#operator)
	- [Ops Manager Administrator](#ops-man-admin)
	- [Elastic Runtime Administrator](#er-admin))
- [Elastic Runtime User](#er-user)
	- Org Manager, Org Auditor, Org Billing Manager
	- Space Manager, Space Developer, Space Auditor
- [End User](#end-user)

## <a id='table'></a>User Types Summary

<table id='users-summary' border='1' class='nice'>
	<tr>
		<th>User Type</th>
		<th>Tools They Use</th>
		<th>Accounts Stored in</th>
		<th>Users They Manage</th>
	</tr><tr>
		<th>Ops Manager Admin</th>
		<td>PivNet <br>Ops Manager <br>cf CLI <br> UAA CLI (UAAC) <br>SSO Dashboard<br>IaaS UX</td>
		<td>Ops Manager store via UAA or external store via SAML or LDAP</td>
		<td>Elastic Runtime Admins</td>
	</tr><tr>
		<th>Elastic Runtime Admin</th>
		<td>PivNet <br> Ops Manager <br>cf CLI<br>Marketplace</td>
		<td>Elastic Runtime user store via UAA or external store via SAML or LDAP</td>
		<td>Elastic Runtime Users</td>
	</tr><tr>
		<th>Elastic Runtime User</th>
		<td>cf CLI <br>CAPI <br>Apps Manager <br>Marketplace</td>
		<td>Elastic Runtime user store via UAA or external store via SAML or LDAP</td>
		<td>Elastic Runtime Users within permitted orgs and spaces, End Users</td>
	</tr><tr>
		<th>End User</th>
		<td>Hosted Applications</td>
		<td>Individual applications or  user store via SSO</td>
		<td></td>
	</tr>
</table>

## <a id="operator"></a>Operator

An operator runs a <%= vars.product_name %> deployment and has the highest-level permissions to configure a deployment, create user accounts, and perform other administrative functions. There are two types of operators:

1. The [Ops Manager Administrator](j#ops-man-admin) deploys and manages Ops Manager
1. The [Elastic Runtime Administrator](#er-admin) deploys and manages Elastic Runtime and other products and services running on top of the Ops Manager layer.

The same person can act as both of these administrators.

### <a id="ops-man-admin"></a>Ops Manager Administrator

An Ops Manager Admin creates a PCF deployment by deploying Ops Manager onto an infrastructure. When Ops Man boots for the first time, the Ops Man Admin specifies that the deployment draws its user account information from one of two places:

1. An internal UAA database that Ops Manager creates new for the deployment.
1. An external, existing identity provider accessed via SAML or LDAP protocol

The Ops Manager Admin uses the UAACß to create [additional Ops Manager Admin](../customizing/opsman-users.html) accounts.

Ops Manager Admins create, operate, and add capabilities to deployments through the Ops Manager Installation Dashboard by installing and configuring tiles for Elastic Runtime and other products and services.

### <a id="er-admin"></a>Elastic Runtime Administrator

The Elastic Runtime Admin deploys and configures the Elastic Runtime tile, plus product and service tiles that the PCF deployment uses.

The Elastic Runtime Admin configures the Elastic Runtime tile to specify whether the deployment's user account information comes from an internal UAA or from an external identity provider.

The Elastic Runtime Admin adds user accounts and define Organizations and Spaces within the deployment. These virtual compartments allow [Elastic Runtime users](#er-user) to self-administer user accounts, roles, and permissions within semi-autonomous subsections of the deployment.

<p class="note"><strong>Note</strong>: The internal UAA for Elastic Runtime is the system-wide UAA for storing user information. It differs from the Ops Manager internal UAA, which only stores Ops Manager Admin accounts.</p>

## <a id="er-user"></a>Elastic Runtime User

Elastic Runtime users include application developers, managers, and auditors who work within Organizations and Spaces. The Elastic Runtime admin manages ER users.

Cloud Foundry uses role-based access control (RBAC), with each role granting permissions in either an org or a space.

ER user records are kept in the Elastic Runtime user store, which can be internal or external. User roles are kept in the Cloud Controller DB, not the ER user store.
	

User roles:

* associate users with, well, roles (or permissions) in orgs and spaces

* defined by ER Admin in CC DB
			via cf CLI
			[PCF,PWS: via Apps Man]

* specific roles - from Orgs, Spaces, Roles, and Permissions topic
			Org Mgr
			Org Auditor
			[PWS: Org Billing Mgr]
			Space Mgr
			Space Dev
			Space Auditor



### <a id='orgs-spaces-roles'></a>Orgs, Spaces, Roles, and Permissions ##

For developers and other <%= vars._product_name %> users, a role-based access control system grants permissions in either an org or a space.

### <a id='orgs'></a>Orgs ##

An org is a development account that an individual or multiple collaborators
can own and use.
All collaborators access an org with user accounts.
Collaborators in an org share a resource quota plan, applications, services
availability, and custom domains.

### <a id='users'></a>User Accounts ##

A user account represents an individual person within the context of a Cloud
Foundry installation.
A user can have different roles in different spaces within an org, governing
what level and type of access they have within that space.

### <a id='spaces'></a>Spaces ##

Every application and service is scoped to a space.
Each org contains at least one space.
A space provides users with access to a shared location for application
development, deployment, and maintenance.
Each space role applies only to a particular space.

### <a id='roles'></a>Roles and Permissions ##

A user can have one or more roles.
The combination of these roles defines the user’s overall permissions in the
org and within specific spaces in that org.

* **Org Managers** are managers or other users who need to administer the account and must be assigned from the UAA CLI. See the <a href="../adminguide/uaa-user-management.html">Creating and Managing Users with the UAA CLI (UAAC)</a> topic to learn how to create a user with admin rights.

* **Org Auditors** view but cannot edit user information and org quota usage 
information.

* **Org Billing Managers** create and manage billing account and payment
information.

* **Space Managers** are managers or other users who administer a space within an org.

* **Space Developers** are application developers or other users who manage 
applications and services in a space.

* **Space Auditors** view but cannot edit the space.


<table id='roles-permissions' border='1' class='nice'>
	<tr>
		<th>User Role</th>
		<th>Org Manager</th>
		<th>Org Auditor</th>
		<th>Org Billing Manager</th>
		<th>Space Manager</th>
		<th>Space Developer</th>
		<th>Space Auditor</th>
	</tr><tr>
		<td>Scope of operation</td> 
		<td>Org</td>
		<td>Org</td>
		<td>Org</td>
		<td>Space</td>
		<td>Space</td>
		<td>Space</td>
	</tr><tr>
		<td>Add and manage users</td>
		<td>&check;</td>
		<td></td>
		<td></td>
		<td>&check;</td>
		<td></td>
		<td></td>
	</tr><tr>
		<td>Edit user roles</td>
		<td>&check;</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
	</tr><tr>
		<td>View users and roles</td>
		<td>&check;</td>
		<td>&check;</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
	</tr><tr>
		<td>View the org quota</td>
		<td>&check;</td>
		<td>&check;</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
	</tr><tr>
		<td>Create, view, edit, and delete spaces</td>
		<td>&check;</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
	</tr><tr>
		<td>View the status, number of instances, service bindings, and resource use of applications</td>
		<td>&check;</td>
		<td></td>
		<td></td>
		<td>&check;</td>
		<td>&check;</td>
		<td>&check;</td>
	</tr><tr>
		<td>Add domains</td>
		<td>&check;</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
	</tr><tr>
		<td>Deploy, run, and manage applications</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td>&check;</td>
		<td></td>
	</tr><tr>
		<td>Instantiate and bind services to applications</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td>&check;</td>
		<td></td>
	</tr><tr>
		<td>Associate URLs, instance counts, memory allocation, and disk limit of applications</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td>&check;</td>
		<td></td>
	</tr><tr>
		<td>Rename spaces and applications</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td>&check;</td>
		<td></td>
	</tr><tr>
		<td>Set payment information and org/space spending limit</td>
		<td></td>
		<td></td>
		<td>&check;</td>
		<td></td>
		<td></td>
		<td></td>
	</tr><tr>
		<td>Read invoices and payment history; set invoice notification email addresses</td>
		<td></td>
		<td></td>
		<td>&check;</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>

##<a id="end-user"></a>End User

People with permissions to use specific applications hosted by ER; they don't directly interact with any ER components

* Without SSO: end users are up to individual application developers. Who can use what app is governed by each application, defined separately

* [PCF,PWS: With SSO - centralized end user management supports SSO for multiple apps (easier!)

Ops Man Admin installs SSO Tile, runs SSO Dashboard, creates service plan that registers various applications, presents dashboard via Okta, etc.

Space Manager create instance of service plan and associates End Users via either internal or external store

* External: SAML or LDAP, which can be different from external user store used for ER Users, above

* Internal UAA: Space Manager associates existing users to plans via SSO dashboard or cf CLI, and create new users via cf CLI ]
